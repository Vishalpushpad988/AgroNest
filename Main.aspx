<%-- 
  यह ASP.NET पेज का डायरेक्टिव है। 
--%>
<%@ Page Language="vb" AutoEventWireup="false" CodeBehind="Main.aspx.vb" Inherits="AgroNest.Main" %>
<!DOCTYPE html>
<html lang="en">
<head runat="server">
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>AgroNest - Dashboard</title>
    <!-- Bootstrap 5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />
    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" />
    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    
    <!-- UPDATED: All CSS is now embedded here -->
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap');
        body { font-family: 'Poppins', sans-serif; background-color: #f0f2f5; color: #4a5568; overflow-x: hidden; }
        h1, h2, h3, h4, h5, h6 { font-weight: 600; color: #2d3748; }
        #wrapper { transition: all 0.3s ease-in-out; }
        #sidebar-wrapper { min-height: 100vh; width: 250px; margin-left: -250px; background: #2E5336; transition: margin 0.25s ease-out; box-shadow: 0 0 20px rgba(0, 0, 0, 0.1); }
        #wrapper.toggled #sidebar-wrapper { margin-left: 0; }
        .sidebar-heading { padding: 1rem 1.25rem; font-size: 1.5rem; font-weight: 700; color: #fff; border-bottom: 1px solid rgba(255, 255, 255, 0.1); }
        .sidebar-heading .fa-leaf { color: #f6ad55; }
        .list-group-item { border: none; padding: 0.9rem 1.5rem; color: #e2e8f0; font-weight: 500; font-size: 0.95rem; transition: all 0.2s ease; }
        .list-group-item-action { background-color: transparent; }
        .list-group-item-action:hover, .list-group-item-action:focus { background-color: rgba(255, 255, 255, 0.07); color: #fff; padding-left: 1.7rem; }
        .list-group-item.active { background: #f6ad55; color: #2E5336; font-weight: 700; border-left: 4px solid #fff; }
        .list-group-item i { width: 20px; text-align: center; font-size: 1rem; }
        #page-content-wrapper { min-width: 100vw; position: relative; }
        #page-content-wrapper-bg { position: absolute; top: 0; left: 0; right: 0; bottom: 0; background-size: cover; background-position: center center; z-index: -1; transition: background-image 0.5s ease-in-out; }
        #page-content-wrapper-bg::before { content: ''; position: absolute; top: 0; left: 0; right: 0; bottom: 0; background-color: rgba(240, 242, 245, 0.85); backdrop-filter: blur(5px); }
        #wrapper.toggled #page-content-wrapper { min-width: 0; width: 100%; }
        .navbar { background-color: #fff !important; box-shadow: 0 2px 4px rgba(0,0,0,0.04); }
        #page-title { font-weight: 700; color: #2d3748; }
        .page-content { animation: fadeIn 0.5s ease-in-out; }
        @keyframes fadeIn { from { opacity: 0; transform: translateY(10px); } to { opacity: 1; transform: translateY(0); } }
        .card { border: none; border-radius: 12px; box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05); background-color: #fff; height: 100%; }
        .card-header { background-color: #fff; border-bottom: 1px solid #e2e8f0; font-weight: 600; padding: 1rem 1.5rem; border-top-left-radius: 12px; border-top-right-radius: 12px; }
        .dashboard-stat-card { display: flex; align-items: center; padding: 1.5rem; }
        .dashboard-stat-card .stat-icon { font-size: 1.75rem; margin-right: 1.25rem; width: 50px; height: 50px; display: flex; align-items: center; justify-content: center; border-radius: 50%; }
        .dashboard-stat-card .stat-info .stat-title { font-size: 0.8rem; font-weight: 500; color: #718096; text-transform: uppercase; }
        .dashboard-stat-card .stat-info .stat-value { font-size: 1.5rem; font-weight: 700; color: #2d3748; }
        .icon-sales { color: #38a169; background-color: #c6f6d5; }
        .icon-profit { color: #3182ce; background-color: #bee3f8; }
        .icon-low-stock { color: #e53e3e; background-color: #fed7d7; }
        .icon-expiry { color: #dd6b20; background-color: #feebc8; }
        .chart-card .card-body { height: 350px; }
        .form-control, .form-select { border-radius: 8px; border: 1px solid #cbd5e0; padding: 0.6rem 1rem; transition: border-color 0.2s ease, box-shadow 0.2s ease; }
        .form-control:focus, .form-select:focus { border-color: #f6ad55; box-shadow: 0 0 0 0.25rem rgba(246, 173, 85, 0.25); }
        .btn { border-radius: 8px; font-weight: 600; padding: 0.6rem 1.2rem; transition: all 0.2s ease; }
        .btn-primary { background-color: #3182ce; border-color: #3182ce; }
        .btn-primary:hover { background-color: #2b6cb0; border-color: #2b6cb0; }
        .btn-success { background-color: #38a169; border-color: #38a169; }
        .btn-success:hover { background-color: #2f855a; border-color: #2f855a; }
        .btn-info { background-color: #319795; border-color: #319795; }
        .btn-info:hover { background-color: #2c7a7b; border-color: #2c7a7b; }
        .btn-lg { padding: 0.8rem 1.5rem; font-size: 1.1rem; }
        .table { background-color: #fff; }
        .table-bordered { border-color: #e2e8f0; }
        .table > :not(caption) > * > * { padding: 1rem; vertical-align: middle; }
        .table thead { background-color: #f7fafc; font-weight: 600; color: #4a5568; }
        .calculator-grid { display: grid; grid-template-columns: repeat(4, 1fr); gap: 10px; }
        #calcDisplay { grid-column: 1 / -1; background-color: #edf2f7; border: none; font-size: 2.5rem; font-weight: 300; padding: 1rem; margin-bottom: 10px; }
        .calculator-grid .btn { border-radius: 12px; height: 60px; width: 100%; font-size: 1.5rem; font-weight: 500; border: none; box-shadow: 0 2px 5px rgba(0,0,0,0.1); }
        .calculator-grid .calc-btn-light { background-color: #fff; color: #2d3748; border: 1px solid #e2e8f0; }
        .calculator-grid .calc-btn-light:hover { background-color: #f7fafc; }
        .calculator-grid .calc-btn-operator { background-color: #f7fafc; color: #4a5568; }
        .calculator-grid .calc-btn-operator:hover { background-color: #e2e8f0; }
        .calculator-grid .calc-btn-equal { background-color: #3182ce; color: white; grid-column: 4; grid-row: 5; }
        .calculator-grid .calc-btn-equal:hover { background-color: #2b6cb0; }
        .calculator-grid .calc-btn-clear { background-color: #fed7d7; color: #c53030; }
        .calculator-grid .calc-btn-clear:hover { background-color: #fbb6b6; }
        .calculator-grid .btn-zero { grid-column: 1 / 3; }
        @media (min-width: 768px) { #sidebar-wrapper { margin-left: 0; } #page-content-wrapper { min-width: 0; width: 100%; } #wrapper.toggled #sidebar-wrapper { margin-left: -250px; } }
    </style>
</head>
<body>
    <form id="form1" runat="server">
        <div class="d-flex" id="wrapper">
            
            <!-- Sidebar -->
            <div id="sidebar-wrapper">
                <div class="sidebar-heading"><i class="fas fa-leaf"></i> AgroNest</div>
                <div class="list-group list-group-flush">
                    <a href="#" class="list-group-item list-group-item-action active" data-target="dashboardContent"><i class="fas fa-tachometer-alt fa-fw me-3"></i><span>Dashboard</span></a>
                    <a href="#" class="list-group-item list-group-item-action" data-target="salesContent"><i class="fas fa-cash-register fa-fw me-3"></i><span>Sales / Billing</span></a>
                    <a href="#" class="list-group-item list-group-item-action" data-target="purchaseContent"><i class="fas fa-shopping-cart fa-fw me-3"></i><span>Purchase Entry</span></a>
                    <a href="#" class="list-group-item list-group-item-action" data-target="itemMasterContent"><i class="fas fa-box fa-fw me-3"></i><span>Item Master</span></a>
                    <a href="#" class="list-group-item list-group-item-action" data-target="supplierMasterContent"><i class="fas fa-truck-field fa-fw me-3"></i><span>Supplier Master</span></a>
                    <a href="#" class="list-group-item list-group-item-action" data-target="customerMasterContent"><i class="fas fa-users fa-fw me-3"></i><span>Customer Master</span></a>
                    <a href="#" class="list-group-item list-group-item-action" data-target="customerLedgerContent"><i class="fas fa-book fa-fw me-3"></i><span>Customer Ledger</span></a>
                    <a href="#" class="list-group-item list-group-item-action" data-target="stockViewContent"><i class="fas fa-warehouse fa-fw me-3"></i><span>View Stock</span></a>
                    <a href="#" class="list-group-item list-group-item-action" data-target="expenseContent"><i class="fas fa-wallet fa-fw me-3"></i><span>Expense Management</span></a>
                    <a href="#" class="list-group-item list-group-item-action" data-target="reportsContent"><i class="fas fa-file-alt fa-fw me-3"></i><span>Reports</span></a>
                    <a href="#" class="list-group-item list-group-item-action" data-target="historyContent"><i class="fas fa-history fa-fw me-3"></i><span>History</span></a>
                    <%-- NEW: Settings Link --%>
                    <a href="#" class="list-group-item list-group-item-action" data-target="settingsContent"><i class="fas fa-cog fa-fw me-3"></i><span>Settings</span></a>
                    <asp:LinkButton ID="btnLogout" OnClick="btnLogout_Click" runat="server" CssClass="list-group-item list-group-item-action text-danger"><i class="fas fa-sign-out-alt fa-fw me-3"></i><span>Logout</span></asp:LinkButton>
                </div>
            </div>

            <!-- Page Content -->
            <div id="page-content-wrapper">
                <%-- NEW: Background Div --%>
                <div id="page-content-wrapper-bg"></div>

                <nav class="navbar navbar-expand-lg navbar-light">
                    <div class="container-fluid">
                        <button class="btn btn-outline-secondary" id="menu-toggle"><i class="fas fa-bars"></i></button>
                        <h4 id="page-title" class="m-0 ms-3">Dashboard</h4>
                    </div>
                </nav>

                <div class="container-fluid p-4">
                    
                    <!-- Dashboard Content -->
                    <div id="dashboardContent" class="page-content">
                        <div class="row align-items-end mb-4 report-filters">
                            <div class="col-md-3">
                                <label for="dashboardDate" class="form-label">Select Date:</label>
                                <input type="date" id="dashboardDate" class="form-control" />
                            </div>
                            <div class="col-md-2">
                                <button id="btnLoadDashboard" class="btn btn-primary w-100 mt-3 mt-md-0">Load Data</button>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-3 col-md-6 mb-4"><div class="card dashboard-stat-card"><div class="stat-icon icon-sales"><i class="fas fa-rupee-sign"></i></div><div class="stat-info"><div class="stat-title">Sales for Day</div><div class="stat-value" id="todaySales">₹ 0.00</div></div></div></div>
                            <div class="col-lg-3 col-md-6 mb-4"><div class="card dashboard-stat-card"><div class="stat-icon icon-profit"><i class="fas fa-chart-pie"></i></div><div class="stat-info"><div class="stat-title">Profit (Est.)</div><div class="stat-value" id="todayProfit">₹ 0.00</div></div></div></div>
                            <div class="col-lg-3 col-md-6 mb-4"><div class="card dashboard-stat-card"><div class="stat-icon icon-low-stock"><i class="fas fa-exclamation-triangle"></i></div><div class="stat-info"><div class="stat-title">Low Stock Items</div><div class="stat-value" id="lowStockItemsCount">0 Items</div></div></div></div>
                            <div class="col-lg-3 col-md-6 mb-4"><div class="card dashboard-stat-card" id="expiringItemsCard" style="cursor: pointer;"><div class="stat-icon icon-expiry"><i class="fas fa-calendar-times"></i></div><div class="stat-info"><div class="stat-title">Nearing Expiry (60d)</div><div class="stat-value" id="expiringItemsCount">0 Items</div></div></div></div>
                        </div>
                        <div class="row">
                            <div class="col-lg-7 mb-4"><div class="card chart-card"><div class="card-header">Weekly Sales Trend</div><div class="card-body"><canvas id="weeklySalesChart"></canvas></div></div></div>
                            <div class="col-lg-5 mb-4"><div class="card chart-card"><div class="card-header">Top 5 Selling Products (All Time)</div><div class="card-body"><canvas id="topProductsChart"></canvas></div></div></div>
                        </div>
                    </div>
                    
                    <!-- Other Page Contents... (unchanged) -->
                    <div id="salesContent" class="page-content" style="display:none;"><div class="card"><div class="card-header d-flex justify-content-between align-items-center"><h4>New Bill / Invoice</h4><button type="button" class="btn btn-outline-secondary btn-sm" data-bs-toggle="modal" data-bs-target="#calculatorModal"><i class="fas fa-calculator"></i> Calculator</button></div><div class="card-body"><div class="row"><div class="col-md-4 mb-3"><label for="saleCustomerName" class="form-label">Customer Name</label><input type="text" list="customerDataList" id="saleCustomerName" class="form-control" placeholder="Type or select a customer..." value=""><datalist id="customerDataList"></datalist><input type="hidden" id="saleCustomerID" value="0" /></div><div class="col-md-3 mb-3"><label for="saleCustomerMobile" class="form-label">Customer Mobile</label><input type="text" id="saleCustomerMobile" class="form-control"></div><div class="col-md-3 mb-3"><label for="saleDate" class="form-label">Billing Date</label><input type="datetime-local" id="saleDate" class="form-control" required></div><div class="col-md-2 mb-3 d-flex align-items-end"><div class="form-check form-switch"><input class="form-check-input" type="checkbox" role="switch" id="isCreditSale" disabled><label class="form-check-label" for="isCreditSale">Sale on Credit?</label></div></div></div><hr><h5>Add Items to Bill</h5><div class="row align-items-end"><div class="col-md-5"><label for="saleItemSearch" class="form-label">Search Item</label><input type="text" list="saleItemList" id="saleItemSearch" class="form-control" placeholder="Type to search..."><datalist id="saleItemList"></datalist><div id="stockInfo" class="form-text fw-bold"></div></div><div class="col-md-2"><button type="button" id="btnAddSaleItem" class="btn btn-primary w-100">Add Item</button></div><div class="col-md-3"><button type="button" class="btn btn-info w-100" data-bs-toggle="modal" data-bs-target="#qrScannerModal"><i class="fas fa-qrcode"></i> Scan Item</button></div></div><div class="table-responsive mt-3"><table class="table table-bordered" id="salesItemsTable"><thead><tr><th>Item Name</th><th style="width: 10%;">Qty</th><th style="width: 12%;">Rate</th><th style="width: 15%;">Discount (%)</th><th style="width: 15%;">Amount</th><th style="width: 10%;">Action</th></tr></thead><tbody></tbody><tfoot><tr><td colspan="4" class="text-end fw-bold">Sub-Total</td><td class="fw-bold" id="saleSubTotal">0.00</td><td></td></tr><tr><td colspan="4" class="text-end fw-bold">Total Discount</td><td class="fw-bold text-danger" id="saleTotalDiscount">0.00</td><td></td></tr><tr><td colspan="4" class="text-end fw-bold h5">GRAND TOTAL</td><td class="fw-bold h5" id="saleGrandTotal">0.00</td><td></td></tr></tfoot></table></div><div class="text-end mt-3"><button type="button" id="btnGenerateBill" class="btn btn-success btn-lg">Generate & Print Bill</button></div></div></div></div>
                    <div id="purchaseContent" class="page-content" style="display:none;"><div class="card"><div class="card-header"><h4>New Purchase Entry</h4></div><div class="card-body"><div class="row"><div class="col-md-4 mb-3"><label for="purchaseSupplier" class="form-label">Select Supplier</label><select id="purchaseSupplier" class="form-select" required></select></div><div class="col-md-4 mb-3"><label for="purchaseInvoiceNo" class="form-label">Supplier Invoice No.</label><input type="text" id="purchaseInvoiceNo" class="form-control" required></div><div class="col-md-4 mb-3"><label for="purchaseInvoiceDate" class="form-label">Invoice Date</label><input type="date" id="purchaseInvoiceDate" class="form-control" required></div></div><hr><h5>Add Items to Purchase</h5><div class="row align-items-end"><div class="col-md-6"><label for="purchaseItemSearch" class="form-label">Search & Select Item</label><input type="text" list="purchaseItemList" id="purchaseItemSearch" class="form-control" placeholder="Type to search..."><datalist id="purchaseItemList"></datalist></div><div class="col-md-2"><button type="button" id="btnAddPurchaseItem" class="btn btn-primary w-100">Add Item</button></div></div><div class="table-responsive mt-3"><table class="table table-bordered" id="purchaseItemsTable"><thead><tr><th>Item Name</th><th style="width: 12%;">Qty</th><th style="width: 15%;">Purchase Rate</th><th style="width: 15%;">Batch No.</th><th style="width: 18%;">Expiry Date</th><th style="width: 10%;">Action</th></tr></thead><tbody></tbody></table></div><div class="text-end mt-3"><button type="button" id="btnSavePurchase" class="btn btn-success btn-lg">Save Purchase</button></div></div></div></div>
                    <div id="itemMasterContent" class="page-content" style="display: none;"><div class="card"><div class="card-header d-flex justify-content-between"><h4>Item List</h4><button type="button" class="btn btn-success" id="btnAddNewItem"><i class="fas fa-plus"></i> Add New Item</button></div><div class="card-body"><div class="table-responsive"><table id="itemTable" class="table table-hover table-bordered" style="width:100%;"><thead><tr><th>Item Name</th><th>Packing</th><th>Company</th><th>Purchase Rate</th><th>Selling Rate</th><th>Min Stock</th><th>Action</th></tr></thead><tbody></tbody></table></div></div></div></div>
                    <div id="supplierMasterContent" class="page-content" style="display:none;"><div class="card"><div class="card-header d-flex justify-content-between"><h4>Supplier List</h4><button type="button" class="btn btn-success" id="btnAddNewSupplier"><i class="fas fa-plus"></i> Add New Supplier</button></div><div class="card-body"><div class="table-responsive"><table id="supplierTable" class="table table-hover table-bordered" style="width:100%;"><thead><tr><th>Supplier Name</th><th>Mobile</th><th>Address</th><th>GSTIN</th><th>Action</th></tr></thead><tbody></tbody></table></div></div></div></div>
                    <div id="customerMasterContent" class="page-content" style="display:none;"><div class="card"><div class="card-header d-flex justify-content-between"><h4>Customer List</h4><button type="button" class="btn btn-success" id="btnAddNewCustomer"><i class="fas fa-plus"></i> Add New Customer</button></div><div class="card-body"><div class="table-responsive"><table id="customerTable" class="table table-hover table-bordered" style="width:100%;"><thead><tr><th>Customer Name</th><th>Mobile</th><th>Address</th><th>Balance (₹)</th><th>Action</th></tr></thead><tbody></tbody></table></div></div></div></div>
                    <div id="customerLedgerContent" class="page-content" style="display:none;"><div class="card"><div class="card-header"><h4>Customer Ledger (Khata)</h4></div><div class="card-body"><div class="row"><div class="col-md-6 mb-3"><label for="ledgerCustomerSelect" class="form-label">Select Customer</label><select id="ledgerCustomerSelect" class="form-select"></select></div></div><hr /><div id="ledgerDetails" style="display:none;"><div class="row"><div class="col-md-8"><h5 id="ledgerCustomerName"></h5><p class="mb-1"><strong>Mobile:</strong> <span id="ledgerCustomerMobile"></span></p><p><strong>Address:</strong> <span id="ledgerCustomerAddress"></span></p><h4>Current Balance: <span id="ledgerCustomerBalance" class="fw-bold"></span></h4></div><div class="col-md-4 border-start"><h5>Receive Payment</h5><div class="mb-2"><label class="form-label">Amount Received</label><input type="number" id="ledgerPaymentAmount" class="form-control"></div><div class="mb-2"><label class="form-label">Payment Date</label><input type="date" id="ledgerPaymentDate" class="form-control"></div><div class="mb-3"><label class="form-label">Remarks</label><input type="text" id="ledgerPaymentRemarks" class="form-control" placeholder="e.g., Cash, UPI"></div><button id="btnReceivePayment" class="btn btn-success w-100">Save Payment</button></div></div><hr /><h5>Transaction History</h5><div class="table-responsive"><table class="table table-bordered table-sm" id="ledgerTransactionsTable"><thead><tr><th>Date</th><th>Type</th><th>Remarks</th><th>Amount (₹)</th></tr></thead><tbody></tbody></table></div></div></div></div></div>
                    <div id="stockViewContent" class="page-content" style="display:none;"><div class="card"><div class="card-header d-flex justify-content-between"><h4>Current Stock</h4><input type="text" id="stockSearch" class="form-control w-25" placeholder="Search by item or company..."></div><div class="card-body"><div class="table-responsive"><table id="stockTable" class="table table-hover table-bordered" style="width:100%;"><thead><tr><th>Item Name</th><th>Packing</th><th>Company</th><th>Batch No.</th><th>Expiry Date</th><th>Available Stock</th></tr></thead><tbody></tbody></table></div></div></div></div>
                    <div id="expenseContent" class="page-content" style="display:none;"><div class="card"><div class="card-body"><ul class="nav nav-tabs" id="expenseTab" role="tablist"><li class="nav-item" role="presentation"><button class="nav-link active" id="add-expense-tab" data-bs-toggle="tab" data-bs-target="#add-expense-pane" type="button" role="tab">Add Expense</button></li><li class="nav-item" role="presentation"><button class="nav-link" id="view-expense-tab" data-bs-toggle="tab" data-bs-target="#view-expense-pane" type="button" role="tab">View Expenses</button></li></ul><div class="tab-content pt-3"><div class="tab-pane fade show active" id="add-expense-pane" role="tabpanel"><div class="card-header"><h4>Record New Expense</h4></div><div class="card-body"><div class="row"><div class="col-md-3 mb-3"><label class="form-label">Expense Date</label><input type="date" id="expenseDate" class="form-control"></div><div class="col-md-3 mb-3"><label class="form-label">Category</label><select id="expenseCategory" class="form-select"><option>Rent</option><option>Salary</option><option>Electricity Bill</option><option>Transportation</option><option>Tea/Snacks</option><option>Miscellaneous</option></select></div><div class="col-md-3 mb-3"><label class="form-label">Amount (₹)</label><input type="number" id="expenseAmount" class="form-control"></div><div class="col-md-3 mb-3"><label class="form-label">Description</label><input type="text" id="expenseDescription" class="form-control"></div></div><div class="text-end"><button id="btnSaveExpense" class="btn btn-primary">Save Expense</button></div></div></div><div class="tab-pane fade" id="view-expense-pane" role="tabpanel"><div class="card-header"><h4>View & Manage Expenses</h4></div><div class="card-body"><div class="row align-items-end mb-3 report-filters"><div class="col-md-3"><label class="form-label">Start Date</label><input type="date" id="expenseStartDate" class="form-control"></div><div class="col-md-3"><label class="form-label">End Date</label><input type="date" id="expenseEndDate" class="form-control"></div><div class="col-md-2"><button id="btnFilterExpenses" class="btn btn-primary w-100">Filter</button></div></div><div class="table-responsive"><table id="expenseTable" class="table table-hover table-bordered" style="width:100%;"><thead><tr><th>Date</th><th>Category</th><th>Description</th><th>Amount</th><th>Action</th></tr></thead><tbody></tbody></table></div></div></div></div></div></div></div>
                    <div id="reportsContent" class="page-content" style="display:none;"><div class="card"><div class="card-body"><ul class="nav nav-tabs" id="reportTab" role="tablist"><li class="nav-item" role="presentation"><button class="nav-link active" id="daily-report-tab" data-bs-toggle="tab" data-bs-target="#daily-report-pane" type="button" role="tab">Daily Report</button></li><li class="nav-item" presentation"><button class="nav-link" id="monthly-report-tab" data-bs-toggle="tab" data-bs-target="#monthly-report-pane" type="button" role="tab">Monthly Report</button></li></ul><div class="tab-content pt-3"><div class="tab-pane fade show active" id="daily-report-pane" role="tabpanel"><h4>Daily Business Report</h4><div class="row align-items-end mb-4 report-filters"><div class="col-md-3"><label for="reportDate" class="form-label">Select Report Date:</label><input type="date" id="reportDate" class="form-control" /></div><div class="col-md-3"><button id="btnGenerateReport" class="btn btn-success w-100"><i class="fas fa-cogs"></i> Generate Report</button></div><div class="col-md-3"><button id="btnPrintReport" class="btn btn-info w-100" style="display:none;"><i class="fas fa-print"></i> Print Report</button></div></div><div id="reportDataContainer" style="display:none;"><hr /><h5 class="text-center" id="reportHeader"></h5><div class="row text-center my-4"><div class="col-md-6"><div class="card bg-light"><div class="card-body"><h6 class="card-subtitle mb-2 text-muted">Total Sales</h6><h4 class="card-title" id="reportTotalSales"></h4></div></div></div><div class="col-md-6"><div class="card bg-light"><div class="card-body"><h6 class="card-subtitle mb-2 text-muted">Estimated Gross Profit</h6><h4 class="card-title text-success" id="reportTotalProfit"></h4></div></div></div></div><h6>Sales Transactions</h6><div class="table-responsive mb-4"><table id="reportSalesTable" class="table table-sm table-bordered"><thead><tr><th>Bill No</th><th>Time</th><th>Customer</th><th>Amount</th></tr></thead><tbody></tbody></table></div><h6>Purchase Transactions</h6><div class="table-responsive"><table id="reportPurchaseTable" class="table table-sm table-bordered"><thead><tr><th>Purchase ID</th><th>Supplier</th><th>Invoice #</th><th>Amount</th></tr></thead><tbody></tbody></table></div></div></div><div class="tab-pane fade" id="monthly-report-pane" role="tabpanel"><h4>Monthly Business Report</h4><div class="row align-items-end mb-4 report-filters"><div class="col-md-3"><label for="reportMonth" class="form-label">Select Month:</label><input type="month" id="reportMonth" class="form-control" /></div><div class="col-md-3"><button id="btnGenerateMonthlyReport" class="btn btn-success w-100"><i class="fas fa-cogs"></i> Generate Report</button></div><div class="col-md-3"><button id="btnPrintMonthlyReport" class="btn btn-info w-100" style="display:none;"><i class="fas fa-print"></i> Print Report</button></div></div><div id="monthlyReportDataContainer" style="display:none;"><hr /><h5 class="text-center" id="monthlyReportHeader"></h5><div class="row text-center my-4"><div class="col-md-3 mb-3"><div class="card"><div class="card-body"><h6 class="card-subtitle text-muted">Total Sales</h6><h4 class="card-title" id="mReportTotalSales"></h4></div></div></div><div class="col-md-3 mb-3"><div class="card"><div class="card-body"><h6 class="card-subtitle text-muted">Total Purchase</h6><h4 class="card-title" id="mReportTotalPurchase"></h4></div></div></div><div class="col-md-3 mb-3"><div class="card"><div class="card-body"><h6 class="card-subtitle text-muted">Total Expenses</h6><h4 class="card-title" id="mReportTotalExpenses"></h4></div></div></div><div class="col-md-3 mb-3"><div class="card"><div class="card-body"><h6 class="card-subtitle text-muted">Net Profit</h6><h4 class="card-title" id="mReportNetProfit"></h4></div></div></div></div><div class="row"><div class="col-md-6"><div class="card"><div class="card-body"><h6>Top 5 Selling Items (by Value)</h6><div class="table-responsive"><table id="mReportTopSalesValue" class="table table-sm table-bordered"><thead><tr><th>Item Name</th><th>Total Value</th></tr></thead><tbody></tbody></table></div></div></div></div><div class="col-md-6"><div class="card"><div class="card-body"><h6>Top 5 Selling Items (by Quantity)</h6><div class="table-responsive"><table id="mReportTopSalesQty" class="table table-sm table-bordered"><thead><tr><th>Item Name</th><th>Total Quantity</th></tr></thead><tbody></tbody></table></div></div></div></div></div><div class="card mt-4"><div class="card-body"><h6 class="mt-4">Day-wise Summary</h6><div class="table-responsive"><table id="mReportDailySummary" class="table table-sm table-bordered"><thead><tr><th>Date</th><th>Sales (₹)</th><th>Purchases (₹)</th><th>Profit (Est. ₹)</th></tr></thead><tbody></tbody></table></div></div></div></div></div></div></div></div></div>
                    <div id="historyContent" class="page-content" style="display: none;"><div class="card"><div class="card-body"><ul class="nav nav-tabs" id="historyTab" role="tablist"><li class="nav-item" role="presentation"><button class="nav-link active" id="sales-history-tab" data-bs-toggle="tab" data-bs-target="#sales-history" type="button" role="tab">Sales History</button></li><li class="nav-item" role="presentation"><button class="nav-link" id="purchase-history-tab" data-bs-toggle="tab" data-bs-target="#purchase-history" type="button" role="tab">Purchase History</button></li></ul><div class="tab-content" id="historyTabContent"><div class="tab-pane fade show active" id="sales-history" role="tabpanel"><div class="mt-3"><div class="table-responsive"><table id="salesHistoryTable" class="table table-hover table-sm table-bordered w-100"><thead><tr><th>Bill No</th><th>Date</th><th>Customer</th><th>Mobile</th><th>Amount</th><th>Action</th></tr></thead><tbody></tbody></table></div></div></div><div class="tab-pane fade" id="purchase-history" role="tabpanel"><div class="mt-3"><div class="table-responsive"><table id="purchaseHistoryTable" class="table table-hover table-sm table-bordered w-100"><thead><tr><th>Purchase ID</th><th>Date</th><th>Supplier</th><th>Invoice #</th><th>Amount</th><th>Action</th></tr></thead><tbody></tbody></table></div></div></div></div></div></div></div>
                    
                    <%-- NEW: Settings Page Content --%>
                    <div id="settingsContent" class="page-content" style="display:none;">
                        <div class="card">
                            <div class="card-header">
                                <h4>Shop & Application Settings</h4>
                            </div>
                            <div class="card-body">
                                <h5>Shop Details</h5>
                                <p class="text-muted">This information will be used on invoices and reports.</p>
                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <label for="settingShopName" class="form-label">Shop Name</label>
                                        <input type="text" id="settingShopName" class="form-control">
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label for="settingPhone" class="form-label">Phone Number</label>
                                        <input type="text" id="settingPhone" class="form-control">
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label for="settingEmail" class="form-label">Email Address</label>
                                        <input type="email" id="settingEmail" class="form-control">
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label for="settingGstin" class="form-label">GSTIN</label>
                                        <input type="text" id="settingGstin" class="form-control">
                                    </div>
                                     <div class="col-md-12 mb-3">
                                        <label for="settingAddress" class="form-label">Address</label>
                                        <textarea id="settingAddress" class="form-control" rows="3"></textarea>
                                    </div>
                                </div>
                                <hr/>
                                <h5>Payment & Theme Settings</h5>
                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <label for="settingUpiId" class="form-label">UPI ID for QR Code</label>
                                        <input type="text" id="settingUpiId" class="form-control" placeholder="yourname@okbank">
                                    </div>
                                     <div class="col-md-6 mb-3">
                                        <label for="settingThemeImage" class="form-label">Background Image URL</label>
                                        <input type="text" id="settingThemeImage" class="form-control" placeholder="https://example.com/image.jpg">
                                    </div>
                                </div>
                                 <div class="text-end mt-3">
                                    <button type="button" id="btnSaveSettings" class="btn btn-success btn-lg">Save Settings</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Modals -->
        <div class="modal fade" id="qrScannerModal" tabindex="-1" aria-labelledby="qrScannerModalLabel" aria-hidden="true"><div class="modal-dialog"><div class="modal-content"><div class="modal-header"><h5 class="modal-title" id="qrScannerModalLabel"><i class="fas fa-qrcode"></i> Scan Item QR Code</h5><button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button></div><div class="modal-body"><p class="text-center">Align the QR code within the frame to scan.</p><div id="qr-reader-modal" style="width: 100%;"></div></div><div class="modal-footer"><button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button></div></div></div></div>
        <div class="modal fade" id="calculatorModal" tabindex="-1"><div class="modal-dialog modal-sm"><div class="modal-content"><div class="modal-header"><h5 class="modal-title">Calculator</h5><button type="button" class="btn-close" data-bs-dismiss="modal"></button></div><div class="modal-body"><div class="calculator-grid"><input type="text" id="calcDisplay" class="form-control text-end" readonly><button class="btn calc-btn-light calc-btn">7</button><button class="btn calc-btn-light calc-btn">8</button><button class="btn calc-btn-light calc-btn">9</button><button class="btn calc-btn-operator calc-btn operator">/</button><button class="btn calc-btn-light calc-btn">4</button><button class="btn calc-btn-light calc-btn">5</button><button class="btn calc-btn-light calc-btn">6</button><button class="btn calc-btn-operator calc-btn operator">*</button><button class="btn calc-btn-light calc-btn">1</button><button class="btn calc-btn-light calc-btn">2</button><button class="btn calc-btn-light calc-btn">3</button><button class="btn calc-btn-operator calc-btn operator">-</button><button class="btn calc-btn-light calc-btn btn-zero">0</button><button class="btn calc-btn-light calc-btn">.</button><button class="btn calc-btn-clear" id="calcClear">C</button><button class="btn calc-btn-operator calc-btn operator">+</button><button class="btn calc-btn-equal" id="calcEquals">=</button></div></div></div></div></div>
        <div class="modal fade" id="itemModal" tabindex="-1"><div class="modal-dialog modal-lg"><div class="modal-content"><div class="modal-header"><h5 class="modal-title" id="itemModalLabel">Item Details</h5><button type="button" class="btn-close" data-bs-dismiss="modal"></button></div><div class="modal-body"><input type="hidden" id="itemId" value="0" /><div class="row"><div class="col-md-8 mb-3"><label class="form-label">Item Name*</label><input type="text" class="form-control" id="itemName" required></div><div class="col-md-4 mb-3"><label class="form-label">Packing Size</label><input type="text" class="form-control" id="packingSize"></div></div><div class="row"><div class="col-md-8 mb-3"><label class="form-label">Company Name</label><input type="text" class="form-control" id="companyName"></div><div class="col-md-4 mb-3"><label class="form-label">HSN/SAC Code</label><input type="text" class="form-control" id="hsnCode"></div></div><div class="row"><div class="col-md-4 mb-3"><label class="form-label">Purchase Rate*</label><input type="number" step="0.01" class="form-control" id="purchaseRate" required></div><div class="col-md-4 mb-3"><label class="form-label">Selling Rate*</label><input type="number" step="0.01" class="form-control" id="sellingRate" required></div><div class="col-md-4 mb-3"><label class="form-label">MRP</label><input type="number" step="0.01" class="form-control" id="mrp"></div></div><div class="row"><div class="col-md-6 mb-3"><label class="form-label">Minimum Stock Level*</label><input type="number" class="form-control" id="minStockLevel" value="10" required></div></div></div><div class="modal-footer"><button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button><button type="button" class="btn btn-primary" id="btnSaveItem">Save Changes</button></div></div></div></div>
        <div class="modal fade" id="supplierModal" tabindex="-1"><div class="modal-dialog"><div class="modal-content"><div class="modal-header"><h5 class="modal-title" id="supplierModalLabel">Supplier Details</h5><button type="button" class="btn-close" data-bs-dismiss="modal"></button></div><div class="modal-body"><input type="hidden" id="supplierId" value="0" /><div class="mb-3"><label class="form-label">Supplier / Firm Name*</label><input type="text" class="form-control" id="supplierName" required></div><div class="mb-3"><label class="form-label">Mobile Number</label><input type="text" class="form-control" id="supplierMobile"></div><div class="mb-3"><label class="form-label">Address</label><textarea class="form-control" id="supplierAddress" rows="3"></textarea></div><div class="mb-3"><label class="form-label">GST Number</label><input type="text" class="form-control" id="supplierGst"></div></div><div class="modal-footer"><button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button><button type="button" class="btn btn-primary" id="btnSaveSupplier">Save Changes</button></div></div></div></div>
        <div class="modal fade" id="customerModal" tabindex="-1"><div class="modal-dialog"><div class="modal-content"><div class="modal-header"><h5 class="modal-title" id="customerModalLabel">Customer Details</h5><button type="button" class="btn-close" data-bs-dismiss="modal"></button></div><div class="modal-body"><input type="hidden" id="customerId" value="0" /><div class="mb-3"><label class="form-label">Customer Name*</label><input type="text" class="form-control" id="customerName" required></div><div class="mb-3"><label class="form-label">Mobile Number</label><input type="text" class="form-control" id="customerMobile"></div><div class="mb-3"><label class="form-label">Address</label><textarea class="form-control" id="customerAddress" rows="3"></textarea></div></div><div class="modal-footer"><button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button><button type="button" class="btn btn-primary" id="btnSaveCustomer">Save Changes</button></div></div></div></div>
        <div class="modal fade" id="expiringItemsModal" tabindex="-1"><div class="modal-dialog modal-lg"><div class="modal-content"><div class="modal-header"><h5 class="modal-title">Items Expiring in Next 60 Days</h5><button type="button" class="btn-close" data-bs-dismiss="modal"></button></div><div class="modal-body"><div class="table-responsive"><table id="expiringItemsTable" class="table table-striped table-bordered" style="width:100%;"><thead><tr><th>Item Name</th><th>Company</th><th>Batch No.</th><th>Expiry Date</th><th>Stock</th></tr></thead><tbody></tbody></table></div></div><div class="modal-footer"><button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button></div></div></div></div>
        <div class="modal fade" id="purchaseDetailModal" tabindex="-1"><div class="modal-dialog modal-lg"><div class="modal-content"><div class="modal-header"><h5 class="modal-title">Purchase Details</h5><button type="button" class="btn-close" data-bs-dismiss="modal"></button></div><div class="modal-body"><div class="row mb-3"><div class="col-md-6"><strong>Supplier:</strong> <span id="pdmSupplier"></span></div><div class="col-md-6"><strong>Invoice #:</strong> <span id="pdmInvoice"></span></div><div class="col-md-6"><strong>Date:</strong> <span id="pdmDate"></span></div><div class="col-md-6"><strong>Total Amount:</strong> <span id="pdmAmount"></span></div></div><table class="table table-bordered"><thead><tr><th>Item Name</th><th>Batch</th><th>Expiry</th><th>Qty</th><th>Rate</th><th>Amount</th></tr></thead><tbody id="pdmItemsTable"></tbody></table></div><div class="modal-footer"><button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button></div></div></div></div>
    
    </form>
    
    <!-- Scripts -->
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.8.2/jspdf.plugin.autotable.min.js"></script>
    <script src="https://unpkg.com/html5-qrcode@2.3.8/html5-qrcode.min.js"></script>

    <script type="text/javascript">
        // --- Global Variables ---
        let allItems = [], allSuppliers = [], allCustomers = [], currentSaleItem = null, selectedPurchaseItem = null;
        let weeklySalesChart = null, topProductsChart = null;
        let purchaseDetailModal, expiringItemsModal, customerModal, itemModal, supplierModal, qrScannerModal;
        let shopSettings = {}; // To store shop details globally
        const pageUrl = "Main.aspx/";
        let html5QrcodeScanner = null;

        $(document).ready(function () {
            // --- Initial Setup & UI Enhancements ---
            purchaseDetailModal = new bootstrap.Modal(document.getElementById('purchaseDetailModal')); expiringItemsModal = new bootstrap.Modal(document.getElementById('expiringItemsModal')); customerModal = new bootstrap.Modal(document.getElementById('customerModal')); itemModal = new bootstrap.Modal(document.getElementById('itemModal')); supplierModal = new bootstrap.Modal(document.getElementById('supplierModal')); qrScannerModal = new bootstrap.Modal(document.getElementById('qrScannerModal'));
            $("#menu-toggle").click(function (e) { e.preventDefault(); $("#wrapper").toggleClass("toggled"); });

            // --- Navigation Logic ---
            $("#sidebar-wrapper .list-group-item").on('click', function (e) {
                if ($(this).find('span').text() === 'Logout') return;
                e.preventDefault();
                $("#sidebar-wrapper .list-group-item").removeClass("active");
                $(this).addClass("active");
                const target = $(this).data("target");
                $(".page-content").hide();
                $("#" + target).show();
                $("#page-title").text($(this).find('span').text());
                if (window.innerWidth < 768) { $("#wrapper").removeClass("toggled"); }

                switch (target) {
                    case 'dashboardContent': loadDashboardData($('#dashboardDate').val()); break;
                    case 'itemMasterContent': loadItems(); break;
                    case 'supplierMasterContent': loadSuppliers(); break;
                    case 'customerMasterContent': loadCustomers(); break;
                    case 'customerLedgerContent': $('#ledgerDetails').hide(); break;
                    case 'stockViewContent': loadStock(); break;
                    case 'historyContent': loadSalesHistory(); loadPurchaseHistory(); break;
                    case 'reportsContent': $('#reportDataContainer, #btnPrintReport, #monthlyReportDataContainer, #btnPrintMonthlyReport').hide(); break;
                    case 'expenseContent': const today = new Date(); const firstDayOfMonth = new Date(today.getFullYear(), today.getMonth(), 1).toISOString().split('T')[0]; $('#expenseStartDate').val(firstDayOfMonth); $('#expenseEndDate').val(today.toISOString().split('T')[0]); $('#expenseDate').val(today.toISOString().split('T')[0]); break;
                    case 'settingsContent': loadShopSettings(); break; // Load settings when page is shown
                }
            });

            // --- Generic AJAX Function ---
            function ajaxCall(method, data, successCallback) { $.ajax({ type: "POST", url: pageUrl + method, data: JSON.stringify(data), contentType: "application/json; charset=utf-8", dataType: "json", timeout: 120000, success: successCallback, error: function (err) { if (err.statusText === "timeout") { alert("The operation is taking too long and has timed out."); } else { console.error(`Error in ${method}:`, err.responseText); alert(`An error occurred while calling ${method}.`); } } }); }

            // --- Settings Logic ---
            function loadShopSettings() {
                ajaxCall("GetShopSettings", {}, function (res) {
                    shopSettings = res.d;
                    $('#settingShopName').val(shopSettings.ShopName);
                    $('#settingAddress').val(shopSettings.Address);
                    $('#settingPhone').val(shopSettings.Phone);
                    $('#settingEmail').val(shopSettings.Email);
                    $('#settingGstin').val(shopSettings.GSTIN);
                    $('#settingUpiId').val(shopSettings.UPI_ID);
                    $('#settingThemeImage').val(shopSettings.ThemeImageURL);
                    applyTheme();
                });
            }

            function applyTheme() {
                if (shopSettings.ThemeImageURL) {
                    $('#page-content-wrapper-bg').css('background-image', `url(${shopSettings.ThemeImageURL})`);
                } else {
                    $('#page-content-wrapper-bg').css('background-image', 'none');
                }
            }

            $('#btnSaveSettings').click(function () {
                const settingsToSave = {
                    ShopName: $('#settingShopName').val(),
                    Address: $('#settingAddress').val(),
                    Phone: $('#settingPhone').val(),
                    Email: $('#settingEmail').val(),
                    GSTIN: $('#settingGstin').val(),
                    UPI_ID: $('#settingUpiId').val(),
                    ThemeImageURL: $('#settingThemeImage').val()
                };
                ajaxCall("SaveShopSettings", { settings: settingsToSave }, function (res) {
                    alert(res.d.message);
                    if (res.d.success) {
                        loadShopSettings(); // Reload and apply settings
                    }
                });
            });

            // --- QR Code Scanner Logic ---
            const qrModalElement = document.getElementById('qrScannerModal'); qrModalElement.addEventListener('shown.bs.modal', function () { if (!html5QrcodeScanner || !html5QrcodeScanner.isScanning) { html5QrcodeScanner = new Html5QrcodeScanner("qr-reader-modal", { fps: 10, qrbox: { width: 250, height: 250 } }); html5QrcodeScanner.render(onScanSuccess, onScanFailure); } }); qrModalElement.addEventListener('hide.bs.modal', function () { if (html5QrcodeScanner && html5QrcodeScanner.isScanning) { html5QrcodeScanner.stop().catch(err => console.error("Failed to stop scanner on modal close", err)); } }); function onScanSuccess(decodedText, decodedResult) { addItemToBillById(decodedText); qrScannerModal.hide(); } function onScanFailure(error) { /* Ignore */ }
            function addItemToBillById(itemId) { if (!itemId || isNaN(itemId)) { alert('Invalid QR Code. It should contain a numeric Item ID.'); return; } ajaxCall("GetItemById", { id: parseInt(itemId) }, (res) => { if (res.d) { const scannedItem = res.d; if (scannedItem.CurrentStock < 1) { alert(`Item "${scannedItem.ItemName}" is out of stock!`); return; } const existingRow = $(`#salesItemsTable tbody tr[data-item-id="${scannedItem.ItemID}"]`); if (existingRow.length > 0) { const qtyInput = existingRow.find('.sale-qty'); let newQty = parseInt(qtyInput.val()) + 1; if (newQty > scannedItem.CurrentStock) { alert(`Stock limit reached for ${scannedItem.ItemName}.`); return; } qtyInput.val(newQty).trigger('change'); } else { const rowHtml = `<tr data-item-id="${scannedItem.ItemID}" data-rate="${scannedItem.SellingRate}" data-max-stock="${scannedItem.CurrentStock}"><td>${scannedItem.ItemName} (${scannedItem.Packing || ''})</td><td><input type="number" class="form-control sale-qty" value="1" min="1" max="${scannedItem.CurrentStock}"></td><td><input type="number" class="form-control sale-rate" value="${scannedItem.SellingRate.toFixed(2)}"></td><td><input type="number" class="form-control sale-discount" value="0.00" min="0" max="100" step="0.01"></td><td class="sale-amount">${scannedItem.SellingRate.toFixed(2)}</td><td><button class="btn btn-danger btn-sm btn-remove-item"><i class="fas fa-trash"></i></button></td></tr>`; $('#salesItemsTable tbody').append(rowHtml); } updateSaleGrandTotal(); } else { alert(`Item with ID ${itemId} not found.`); } }); }

            // --- PDF Generation Functions ---
            function generatePdfInvoice(d) { const { jsPDF } = window.jspdf; const doc = new jsPDF(); const pageW = doc.internal.pageSize.getWidth(); const margin = 14; doc.setFont("helvetica", "bold"); doc.setFontSize(20); doc.text(shopSettings.ShopName || "AgroNest", margin, 20); doc.setFont("helvetica", "normal"); doc.setFontSize(10); doc.text(shopSettings.Address || "Shop Address", margin, 26); doc.text(`Phone: ${shopSettings.Phone || 'N/A'} | Email: ${shopSettings.Email || 'N/A'}`, margin, 31); doc.setFontSize(18); doc.setFont("helvetica", "bold"); doc.text("TAX INVOICE", pageW - margin, 20, { align: "right" }); doc.line(margin, 38, pageW - margin, 38); const billDate = new Date(parseInt(d.SaleDate.substr(6))).toLocaleString('en-GB'); doc.setFontSize(11); doc.setFont("helvetica", "normal"); doc.text(`Bill No: INV-${d.SaleID}`, margin, 46); doc.text(`Date: ${billDate}`, pageW - margin, 46, { align: "right" }); doc.setFont("helvetica", "bold"); doc.text(`Bill To:`, margin, 54); doc.setFont("helvetica", "normal"); doc.text(`${d.CustomerName}`, margin, 60); doc.text(`Mobile: ${d.CustomerMobile || 'N/A'}`, margin, 65); const cols = ["#", "Item Description", "HSN", "Qty", "Rate", "Amount"]; const rows = d.Items.map((item, index) => [index + 1, `${item.ItemName} (${item.Packing || ''})`, item.HSNCode || '', item.Quantity, item.Rate.toFixed(2), (item.Quantity * item.Rate).toFixed(2)]); doc.autoTable({ head: [cols], body: rows, startY: 75, theme: 'grid', headStyles: { fillColor: [46, 83, 54] } }); const finalY = doc.lastAutoTable.finalY; const totalX = pageW - 60; const valueX = pageW - margin; doc.setFontSize(11); doc.setFont("helvetica", "normal"); doc.text(`Sub Total:`, totalX, finalY + 10, { align: 'right' }); doc.text(`₹ ${d.SubTotal.toFixed(2)}`, valueX, finalY + 10, { align: 'right' }); doc.text(`Discount:`, totalX, finalY + 17, { align: 'right' }); doc.text(`- ₹ ${d.DiscountAmount.toFixed(2)}`, valueX, finalY + 17, { align: 'right' }); doc.setLineWidth(0.2); doc.line(totalX - 10, finalY + 21, valueX, finalY + 21); doc.setFont("helvetica", "bold"); doc.text(`Grand Total:`, totalX, finalY + 26, { align: 'right' }); doc.text(`₹ ${d.GrandTotal.toFixed(2)}`, valueX, finalY + 26, { align: 'right' }); doc.setFont("helvetica", "normal"); if (d.PaymentQRCodeBase64) { doc.setFontSize(10); doc.setFont("helvetica", "bold"); doc.text("Scan to Pay using UPI", margin, finalY + 15); doc.addImage(d.PaymentQRCodeBase64, 'PNG', margin, finalY + 17, 35, 35); } const pageHeight = doc.internal.pageSize.height; doc.setFontSize(9); doc.setTextColor(150); doc.text("Thank you for your business! | This is a computer-generated invoice.", pageW / 2, pageHeight - 10, { align: 'center' }); doc.save(`Invoice-${d.SaleID}.pdf`); }
            const addPdfFooter = (doc) => { const pageCount = doc.internal.getNumberOfPages(); for (let i = 1; i <= pageCount; i++) { doc.setPage(i); const pageW = doc.internal.pageSize.getWidth(); const pageH = doc.internal.pageSize.getHeight(); doc.setFontSize(9); doc.setTextColor(150, 150, 150); doc.text(`Page ${i} of ${pageCount}`, pageW / 2, pageH - 10, { align: 'center' }); doc.text(`Report Generated: ${new Date().toLocaleString('en-GB')}`, 14, pageH - 10); } };
            $('#btnPrintReport').click(() => { const { jsPDF } = window.jspdf; const doc = new jsPDF(); const dStr = $('#reportDate').val(); const dObj = new Date(dStr + 'T00:00:00'); const formattedDate = dObj.toLocaleDateString('en-GB', { day: '2-digit', month: 'long', year: 'numeric' }); const pageW = doc.internal.pageSize.getWidth(); const margin = 14; doc.setFont("helvetica", "bold"); doc.setFontSize(20); doc.setTextColor(0, 0, 0); doc.text(shopSettings.ShopName || "AgroNest", margin, 20); doc.setFontSize(16); doc.text("Daily Business Report", pageW - margin, 20, { align: "right" }); doc.setFont("helvetica", "normal"); doc.setFontSize(11); doc.text(`Date: ${formattedDate}`, pageW - margin, 26, { align: "right" }); doc.line(margin, 32, pageW - margin, 32); const cardWidth = (pageW - (margin * 2) - 10) / 2; doc.setDrawColor(222, 226, 230); doc.setLineWidth(0.2); doc.roundedRect(margin, 40, cardWidth, 25, 3, 3, 'S'); doc.roundedRect(margin + cardWidth + 10, 40, cardWidth, 25, 3, 3, 'S'); doc.setFontSize(11); doc.setTextColor(108, 117, 125); doc.text("Total Sales", margin + cardWidth / 2, 48, { align: 'center' }); doc.text("Estimated Gross Profit", margin + cardWidth + 10 + cardWidth / 2, 48, { align: 'center' }); doc.setFontSize(16); doc.setTextColor(0, 0, 0); doc.setFont("helvetica", "bold"); doc.text($('#reportTotalSales').text(), margin + cardWidth / 2, 58, { align: 'center' }); doc.text($('#reportTotalProfit').text(), margin + cardWidth + 10 + cardWidth / 2, 58, { align: 'center' }); doc.setFont("helvetica", "normal"); doc.autoTable({ html: '#reportSalesTable', startY: 75, theme: 'grid', headStyles: { fillColor: [248, 249, 250], textColor: [0, 0, 0] }, didDrawPage: (data) => { doc.setFontSize(14); doc.setTextColor(0, 0, 0); doc.text('Sales Transactions', margin, data.cursor.y - 10); } }); doc.autoTable({ html: '#reportPurchaseTable', startY: doc.lastAutoTable.finalY + 15, theme: 'grid', headStyles: { fillColor: [248, 249, 250], textColor: [0, 0, 0] }, didDrawPage: (data) => { doc.setFontSize(14); doc.setTextColor(0, 0, 0); doc.text('Purchase Transactions', margin, doc.lastAutoTable.finalY + 10); } }); addPdfFooter(doc); doc.save(`DailyReport-${dStr}.pdf`); });
            $('#btnPrintMonthlyReport').click(function () { const { jsPDF } = window.jspdf; const doc = new jsPDF(); const mStr = $('#reportMonth').val(); const [y, mn] = mStr.split('-'); const dObj = new Date(y, mn - 1, 1); const fm = dObj.toLocaleString('en-US', { month: 'long', year: 'numeric' }); const pageW = doc.internal.pageSize.getWidth(); const margin = 14; doc.setFont("helvetica", "bold"); doc.setFontSize(20); doc.setTextColor(0, 0, 0); doc.text(shopSettings.ShopName || "AgroNest", margin, 20); doc.setFontSize(16); doc.text("Monthly Business Report", pageW - margin, 20, { align: "right" }); doc.setFont("helvetica", "normal"); doc.setFontSize(11); doc.text(`For Month: ${fm}`, pageW - margin, 26, { align: "right" }); doc.line(margin, 32, pageW - margin, 32); const cardWidth = (pageW - (margin * 2) - 30) / 4; const cardY = 40; doc.setDrawColor(222, 226, 230); doc.setLineWidth(0.2); const cards = [{ title: 'Total Sales', value: $('#mReportTotalSales').text() }, { title: 'Total Purchase', value: $('#mReportTotalPurchase').text() }, { title: 'Total Expenses', value: $('#mReportTotalExpenses').text() }, { title: 'Net Profit', value: $('#mReportNetProfit').text() }]; cards.forEach((card, index) => { const cardX = margin + (index * (cardWidth + 10)); doc.roundedRect(cardX, cardY, cardWidth, 25, 3, 3, 'S'); doc.setFontSize(10); doc.setTextColor(108, 117, 125); doc.text(card.title, cardX + cardWidth / 2, cardY + 8, { align: 'center' }); doc.setFontSize(14); doc.setFont("helvetica", "bold"); doc.setTextColor(0, 0, 0); doc.text(card.value, cardX + cardWidth / 2, cardY + 18, { align: 'center' }); }); doc.setFont("helvetica", "normal"); let startY = 75; doc.autoTable({ html: '#mReportTopSalesValue', startY: startY, theme: 'grid', headStyles: { fillColor: [248, 249, 250], textColor: [0, 0, 0] }, didDrawPage: (data) => { doc.setFontSize(14); doc.setTextColor(0, 0, 0); doc.text('Top Selling Items (by Value)', margin, startY - 5); } }); doc.autoTable({ html: '#mReportTopSalesQty', startY: doc.lastAutoTable.finalY + 15, theme: 'grid', headStyles: { fillColor: [248, 249, 250], textColor: [0, 0, 0] }, didDrawPage: (data) => { doc.setFontSize(14); doc.setTextColor(0, 0, 0); doc.text('Top Selling Items (by Quantity)', margin, doc.lastAutoTable.finalY + 10); } }); doc.autoTable({ html: '#mReportDailySummary', startY: doc.lastAutoTable.finalY + 15, theme: 'grid', headStyles: { fillColor: [248, 249, 250], textColor: [0, 0, 0] }, didDrawPage: (data) => { doc.setFontSize(14); doc.setTextColor(0, 0, 0); doc.text('Day-wise Summary', margin, doc.lastAutoTable.finalY + 10); } }); addPdfFooter(doc); doc.save(`MonthlyReport-${mStr}.pdf`); });

            // --- Other JS Functions ---
            function loadInitialData() { ajaxCall("GetInitialData", {}, function (response) { const data = response.d; allItems = data.Items; allSuppliers = data.Suppliers; allCustomers = data.Customers; populateSuppliersDropdown(); populateItemsDatalist(); populateCustomersDatalist(); }); }
            function setInitialDates() { const now = new Date(); const today = now.toISOString().split('T')[0]; $('#purchaseInvoiceDate, #dashboardDate, #reportDate, #ledgerPaymentDate').val(today); now.setMinutes(now.getMinutes() - now.getTimezoneOffset()); $('#saleDate').val(now.toISOString().slice(0, 16)); const month = ('0' + (now.getMonth() + 1)).slice(-2); const year = now.getFullYear(); $('#reportMonth').val(`${year}-${month}`); }
            $(document).on('click', '.btn-delete-customer', function () { const customerId = $(this).data('id'); const customerName = $(this).closest('tr').find('td:first').text(); if (!confirm(`Are you sure you want to delete customer "${customerName}"?\n\nThis can only be done if their account balance is zero.`)) return; ajaxCall("DeleteCustomer", { customerId: customerId }, (res) => { alert(res.d.message); if (res.d.success) { loadCustomers(); loadInitialData(); } }); });
            $('#btnLoadDashboard').click(() => loadDashboardData($('#dashboardDate').val()));
            function loadDashboardData(date) { if (!date) return; ajaxCall("GetDashboardData", { selectedDate: date }, (res) => { const d = res.d; $('#todaySales').text('₹ ' + d.TodaySales.toFixed(2)); $('#todayProfit').text('₹ ' + d.TodayProfit.toFixed(2)); $('#lowStockItemsCount').text(d.LowStockItems + ' Items'); $('#expiringItemsCount').text(d.ExpiringItemsCount + ' Items'); renderWeeklySalesChart(d.WeeklySales); renderTopProductsChart(d.TopProducts); }); }
            $('#expiringItemsCard').click(function () { loadExpiringItems(); });
            function renderWeeklySalesChart(d) { const c = document.getElementById('weeklySalesChart').getContext('2d'); if (weeklySalesChart) weeklySalesChart.destroy(); weeklySalesChart = new Chart(c, { type: 'bar', data: { labels: d.map(x => x.Key), datasets: [{ label: 'Sales (₹)', data: d.map(x => x.Value), backgroundColor: 'rgba(49, 130, 206, 0.7)', borderColor: 'rgba(49, 130, 206, 1)', borderWidth: 1 }] }, options: { maintainAspectRatio: false, scales: { y: { beginAtZero: true } } } }); }
            function renderTopProductsChart(d) { const c = document.getElementById('topProductsChart').getContext('2d'); if (topProductsChart) topProductsChart.destroy(); topProductsChart = new Chart(c, { type: 'doughnut', data: { labels: d.map(x => x.Key), datasets: [{ label: 'Quantity Sold', data: d.map(x => x.Value), backgroundColor: ['#38A169', '#3182CE', '#DD6B20', '#6B46C1', '#718096'] }] }, options: { maintainAspectRatio: false, responsive: true } }); }
            function populateSuppliersDropdown() { const $s = $('#purchaseSupplier').empty().append('<option value="">-- Select Supplier --</option>'); $.each(allSuppliers, (i, sup) => $s.append(`<option value="${sup.SupplierID}">${sup.SupplierName}</option>`)); }
            function populateItemsDatalist() { const $p = $('#purchaseItemList'), $s = $('#saleItemList'); $p.empty(); $s.empty(); $.each(allItems, (i, item) => { const o = `<option value="${item.ItemName} (${item.Packing || ''})" data-id="${item.ItemID}"></option>`; $p.append(o); $s.append(o); }); }
            function populateCustomersDatalist() { const $dl = $('#customerDataList').empty(); const $l = $('#ledgerCustomerSelect').empty().append('<option value="">-- Select Customer --</option>'); $.each(allCustomers, (i, cust) => { const o = `<option value="${cust.CustomerName}" data-id="${cust.CustomerID}" data-mobile="${cust.Mobile || ''}"></option>`; $dl.append(o); $l.append(`<option value="${cust.CustomerID}">${cust.CustomerName}</option>`); }); }
            $('#saleCustomerName').on('input', function () { const v = $(this).val(); const o = $('#customerDataList option').filter(function () { return $(this).val() === v; }); if (o.length > 0) { $('#saleCustomerID').val(o.data('id')); $('#saleCustomerMobile').val(o.data('mobile')); $('#isCreditSale').prop('disabled', false); } else { $('#saleCustomerID').val('0'); $('#saleCustomerMobile').val(''); $('#isCreditSale').prop('checked', false).prop('disabled', true); } });
            function loadItems() { ajaxCall("GetItems", {}, (res) => { const t = $("#itemTable tbody").empty(); $.each(res.d, (i, item) => t.append(`<tr><td>${item.ItemName}</td><td>${item.Packing || ''}</td><td>${item.Company || ''}</td><td>${item.PurchaseRate.toFixed(2)}</td><td>${item.SellingRate.toFixed(2)}</td><td>${item.MinStockLevel}</td><td><button class="btn btn-sm btn-info btn-edit-item" data-id="${item.ItemID}"><i class="fas fa-edit"></i></button> <button class="btn btn-sm btn-danger btn-delete-item" data-id="${item.ItemID}"><i class="fas fa-trash"></i></button></td></tr>`)); }); }
            $('#btnAddNewItem').click(() => { $('#itemModalLabel').text('Add New Item'); $("#itemModal .modal-body input").val(''); $('#itemId').val('0'); $('#minStockLevel').val('10'); itemModal.show(); });
            $('#btnSaveItem').click(() => { const item = { ItemID: parseInt($('#itemId').val()), ItemName: $('#itemName').val().trim(), Packing: $('#packingSize').val().trim(), Company: $('#companyName').val().trim(), PurchaseRate: parseFloat($('#purchaseRate').val()), SellingRate: parseFloat($('#sellingRate').val()), MRP: parseFloat($('#mrp').val()) || null, HSNCode: $('#hsnCode').val().trim(), MinStockLevel: parseInt($('#minStockLevel').val() || 10) }; if (!item.ItemName || isNaN(item.PurchaseRate) || isNaN(item.SellingRate)) { alert('Please fill required fields: Name, Purchase Rate, and Selling Rate.'); return; } ajaxCall("SaveItem", { item: item }, (res) => { alert(res.d.message); if (res.d.success) { itemModal.hide(); loadItems(); loadInitialData(); } }); });
            $(document).on('click', '.btn-edit-item', function () { ajaxCall("GetItemById", { id: $(this).data('id') }, (res) => { const i = res.d; $('#itemModalLabel').text('Edit Item'); $('#itemId').val(i.ItemID); $('#itemName').val(i.ItemName); $('#companyName').val(i.Company); $('#packingSize').val(i.Packing); $('#hsnCode').val(i.HSNCode); $('#purchaseRate').val(i.PurchaseRate); $('#sellingRate').val(i.SellingRate); $('#mrp').val(i.MRP); $('#minStockLevel').val(i.MinStockLevel); itemModal.show(); }); });
            $(document).on('click', '.btn-delete-item', function () { if (!confirm('Are you sure?')) return; ajaxCall("DeleteItem", { id: $(this).data('id') }, (res) => { alert(res.d.message); if (res.d.success) { loadItems(); loadInitialData(); } }); });
            function loadSuppliers() { ajaxCall("GetSuppliers", {}, (res) => { const t = $("#supplierTable tbody").empty(); $.each(res.d, (i, sup) => t.append(`<tr><td>${sup.SupplierName}</td><td>${sup.Mobile || ''}</td><td>${sup.Address || ''}</td><td>${sup.GSTIN || ''}</td><td><button class="btn btn-sm btn-info btn-edit-supplier" data-id="${sup.SupplierID}"><i class="fas fa-edit"></i></button> <button class="btn btn-sm btn-danger btn-delete-supplier" data-id="${sup.SupplierID}"><i class="fas fa-trash"></i></button></td></tr>`)); }); }
            $('#btnAddNewSupplier').click(() => { $('#supplierModalLabel').text('Add New Supplier'); $("#supplierModal .modal-body input, #supplierModal .modal-body textarea").val(''); $('#supplierId').val('0'); supplierModal.show(); });
            $('#btnSaveSupplier').click(() => { const s = { SupplierID: parseInt($('#supplierId').val()), SupplierName: $('#supplierName').val().trim(), Mobile: $('#supplierMobile').val().trim(), Address: $('#supplierAddress').val().trim(), GSTIN: $('#supplierGst').val().trim() }; if (!s.SupplierName) { alert('Supplier Name is required.'); return; } ajaxCall("SaveSupplier", { supplier: s }, (res) => { alert(res.d.message); if (res.d.success) { supplierModal.hide(); loadSuppliers(); loadInitialData(); } }); });
            $(document).on('click', '.btn-edit-supplier', function () { ajaxCall("GetSupplierById", { Id: $(this).data('id') }, (res) => { var s = res.d; $('#supplierModalLabel').text('Edit Supplier'); $('#supplierId').val(s.SupplierID); $('#supplierName').val(s.SupplierName); $('#supplierMobile').val(s.Mobile); $('#supplierAddress').val(s.Address); $('#supplierGst').val(s.GSTIN); supplierModal.show(); }); });
            $(document).on('click', '.btn-delete-supplier', function () { if (!confirm('Are you sure?')) return; ajaxCall("DeleteSupplier", { Id: $(this).data('id') }, (res) => { if (res.d.success) { loadSuppliers(); loadInitialData(); alert(res.d.message); } else { alert("Error: " + res.d.message); } }); });
            function loadCustomers() { ajaxCall("GetCustomers", {}, (res) => { const t = $("#customerTable tbody").empty(); $.each(res.d, (i, c) => { const b = c.CurrentBalance > 0 ? 'text-danger' : 'text-success'; t.append(`<tr><td>${c.CustomerName}</td><td>${c.Mobile || ''}</td><td>${c.Address || ''}</td><td class="fw-bold ${b}">${c.CurrentBalance.toFixed(2)}</td><td><button class="btn btn-sm btn-info btn-edit-customer" data-id="${c.CustomerID}"><i class="fas fa-edit"></i></button> <button class="btn btn-sm btn-danger btn-delete-customer" data-id="${c.CustomerID}"><i class="fas fa-trash"></i></button></td></tr>`); }); }); }
            $('#btnAddNewCustomer').click(() => { $('#customerModalLabel').text('Add New Customer'); $("#customerModal .modal-body input, #customerModal .modal-body textarea").val(''); $('#customerId').val('0'); customerModal.show(); });
            $('#btnSaveCustomer').click(() => { const c = { CustomerID: parseInt($('#customerId').val()), CustomerName: $('#customerName').val().trim(), Mobile: $('#customerMobile').val().trim(), Address: $('#customerAddress').val().trim() }; if (!c.CustomerName) { alert('Customer Name is required.'); return; } ajaxCall("SaveCustomer", { customer: c }, (res) => { alert(res.d.message); if (res.d.success) { customerModal.hide(); loadCustomers(); loadInitialData(); } }); });
            $(document).on('click', '.btn-edit-customer', function () { ajaxCall("GetCustomerById", { id: $(this).data('id') }, (res) => { var c = res.d; $('#customerModalLabel').text('Edit Customer'); $('#customerId').val(c.CustomerID); $('#customerName').val(c.CustomerName); $('#customerMobile').val(c.Mobile); $('#customerAddress').val(c.Address); customerModal.show(); }); });
            $('#ledgerCustomerSelect').change(function () { const c = $(this).val(); if (c) { ajaxCall("GetCustomerLedger", { customerId: c }, (res) => { const d = res.d; $('#ledgerCustomerName').text(d.Details.CustomerName); $('#ledgerCustomerMobile').text(d.Details.Mobile || 'N/A'); $('#ledgerCustomerAddress').text(d.Details.Address || 'N/A'); const b = d.Details.CurrentBalance; $('#ledgerCustomerBalance').text(`₹ ${b.toFixed(2)}`).removeClass('text-danger text-success').addClass(b > 0 ? 'text-danger' : 'text-success'); const t = $('#ledgerTransactionsTable tbody').empty(); $.each(d.Transactions, (i, tx) => { const dt = new Date(parseInt(tx.TransactionDate.substr(6))).toLocaleString('en-GB'); t.append(`<tr><td>${dt}</td><td>${tx.TransactionType}</td><td>${tx.Remarks}</td><td class="${tx.TransactionType === 'Sale' ? 'text-danger' : 'text-success'}">${tx.Amount.toFixed(2)}</td></tr>`); }); $('#ledgerDetails').show(); }); } else { $('#ledgerDetails').hide(); } });
            $('#btnReceivePayment').click(function () { const p = { customerId: $('#ledgerCustomerSelect').val(), amount: parseFloat($('#ledgerPaymentAmount').val()), paymentDate: $('#ledgerPaymentDate').val(), remarks: $('#ledgerPaymentRemarks').val().trim() }; if (!p.customerId || !p.amount || !p.paymentDate) { alert('Please fill all payment details.'); return; } ajaxCall("SaveCustomerPayment", p, (res) => { alert(res.d.message); if (res.d.success) { $('#ledgerPaymentAmount, #ledgerPaymentRemarks').val(''); $('#ledgerCustomerSelect').trigger('change'); loadInitialData(); } }); });
            $('#purchaseItemSearch').on('input', function () { const v = $(this).val(); const o = $(`#purchaseItemList option`).filter(function () { return $(this).val() === v; }); if (o.length > 0) ajaxCall("GetItemById", { id: o.data('id') }, (res) => { selectedPurchaseItem = res.d; }); });
            $('#btnAddPurchaseItem').click(() => { if (!selectedPurchaseItem) { alert('Please select a valid item.'); return; } const i = selectedPurchaseItem; const r = `<tr data-item-id="${i.ItemID}"><td>${i.ItemName} (${i.Packing})</td><td><input type="number" class="form-control purchase-qty" value="1" min="1"></td><td><input type="number" class="form-control purchase-rate" value="${i.PurchaseRate.toFixed(2)}"></td><td><input type="text" class="form-control purchase-batch" required></td><td><input type="date" class="form-control purchase-expiry"></td><td><button class="btn btn-danger btn-sm btn-remove-item"><i class="fas fa-trash"></i></button></td></tr>`; $('#purchaseItemsTable tbody').append(r); $('#purchaseItemSearch').val('').focus(); selectedPurchaseItem = null; });
            $('#btnSavePurchase').click(() => { const p = { SupplierID: $('#purchaseSupplier').val(), InvoiceNumber: $('#purchaseInvoiceNo').val().trim(), InvoiceDate: $('#purchaseInvoiceDate').val(), Items: [] }; if (!p.SupplierID || !p.InvoiceNumber || !p.InvoiceDate) { alert('Please fill header details.'); return; } let isValid = true; $('#purchaseItemsTable tbody tr').each(function () { const r = $(this); const i = { ItemID: r.data('item-id'), Quantity: parseInt(r.find('.purchase-qty').val()), Rate: parseFloat(r.find('.purchase-rate').val()), BatchNo: r.find('.purchase-batch').val().trim(), ExpiryDate: r.find('.purchase-expiry').val() || null }; if (!i.Quantity || !i.Rate || !i.BatchNo) isValid = false; p.Items.push(i); }); if (!isValid) { alert('Please fill all item details.'); return; } if (p.Items.length === 0) { alert('Please add items.'); return; } ajaxCall("SavePurchase", { purchase: p }, (res) => { alert(res.d.message); if (res.d.success) { $('#purchaseItemsTable tbody').empty(); $('#purchaseInvoiceNo').val(''); loadDashboardData($('#dashboardDate').val()); loadInitialData(); } }); });
            $('#saleItemSearch').on('input', function () { const v = $(this).val(); const o = $(`#saleItemList option`).filter(function () { return $(this).val() === v; }); if (o.length > 0) { ajaxCall("GetItemById", { id: o.data('id') }, (res) => { currentSaleItem = res.d; $('#stockInfo').text(`Available: ${currentSaleItem.CurrentStock} Pcs. Rate: ₹${currentSaleItem.SellingRate.toFixed(2)}`).css('color', currentSaleItem.CurrentStock > 0 ? 'blue' : 'red'); }); } else { $('#stockInfo').text(''); currentSaleItem = null; } });
            $('#btnAddSaleItem').click(() => { if (!currentSaleItem) { alert('Please select a valid item.'); return; } if (currentSaleItem.CurrentStock < 1) { alert('Item out of stock!'); return; } const e = $(`#salesItemsTable tbody tr[data-item-id="${currentSaleItem.ItemID}"]`); if (e.length > 0) { const q = e.find('.sale-qty'); let n = parseInt(q.val()) + 1; if (n > currentSaleItem.CurrentStock) { alert(`Stock limit reached.`); return; } q.val(n).trigger('change'); } else { const r = `<tr data-item-id="${currentSaleItem.ItemID}" data-rate="${currentSaleItem.SellingRate}" data-max-stock="${currentSaleItem.CurrentStock}"><td>${currentSaleItem.ItemName} (${currentSaleItem.Packing})</td><td><input type="number" class="form-control sale-qty" value="1" min="1" max="${currentSaleItem.CurrentStock}"></td><td><input type="number" class="form-control sale-rate" value="${currentSaleItem.SellingRate.toFixed(2)}"></td><td><input type="number" class="form-control sale-discount" value="0.00" min="0" max="100" step="0.01"></td><td class="sale-amount">${currentSaleItem.SellingRate.toFixed(2)}</td><td><button class="btn btn-danger btn-sm btn-remove-item"><i class="fas fa-trash"></i></button></td></tr>`; $('#salesItemsTable tbody').append(r); } updateSaleGrandTotal(); $('#saleItemSearch').val('').focus(); $('#stockInfo').text(''); currentSaleItem = null; });
            $(document).on('click', '.btn-remove-item', function () { $(this).closest('tr').remove(); updateSaleGrandTotal(); });
            $(document).on('change keyup', '.sale-qty, .sale-rate, .sale-discount', function () { const r = $(this).closest('tr'); let q = parseInt(r.find('.sale-qty').val()) || 0; const m = parseInt(r.data('max-stock')); if (q > m) { alert(`Stock limit (${m})`); q = m; r.find('.sale-qty').val(m); } const rate = parseFloat(r.find('.sale-rate').val()) || 0; const d = parseFloat(r.find('.sale-discount').val()) || 0; const a = (q * rate) * (1 - (d / 100)); r.find('.sale-amount').text(a.toFixed(2)); updateSaleGrandTotal(); });
            function updateSaleGrandTotal() { let s = 0, t = 0; $('#salesItemsTable tbody tr').each(function () { const r = $(this); const q = parseInt(r.find('.sale-qty').val()) || 0; const rate = parseFloat(r.find('.sale-rate').val()) || 0; const d = parseFloat(r.find('.sale-discount').val()) || 0; const rs = q * rate; const rd = rs * (d / 100); s += rs; t += rd; }); $('#saleSubTotal').text(s.toFixed(2)); $('#saleTotalDiscount').text(t.toFixed(2)); $('#saleGrandTotal').text((s - t).toFixed(2)); }
            $('#btnGenerateBill').click(() => { const cId = parseInt($('#saleCustomerID').val()) || 0; const s = { CustomerID: cId > 0 ? cId : null, IsCreditSale: $('#isCreditSale').is(':checked'), CustomerName: $('#saleCustomerName').val().trim(), CustomerMobile: $('#saleCustomerMobile').val().trim(), SaleDate: $('#saleDate').val(), Items: [], DiscountAmount: parseFloat($('#saleTotalDiscount').text()) }; if (s.IsCreditSale && !s.CustomerID) { alert('Select a registered customer for credit sale.'); return; } if (!s.CustomerName || !s.SaleDate) { alert('Enter customer name and date.'); return; } $('#salesItemsTable tbody tr').each(function () { const r = $(this); s.Items.push({ ItemID: r.data('item-id'), Quantity: parseInt(r.find('.sale-qty').val()), Rate: parseFloat(r.find('.sale-rate').val()) }); }); if (s.Items.length === 0) { alert('Add items to bill.'); return; } ajaxCall("SaveSale", { saleInput: s }, (res) => { alert(res.d.message); if (res.d.success) { generatePdfInvoice(res.d.SaleData); $('#salesItemsTable tbody').empty(); $('#saleCustomerName').val('Cash/Retail').trigger('input'); updateSaleGrandTotal(); loadDashboardData($('#dashboardDate').val()); loadInitialData(); setInitialDates(); } }); });
            function loadStock() { ajaxCall("GetStockReport", {}, (res) => { const t = $("#stockTable tbody").empty(); $.each(res.d, (i, s) => { const e = s.ExpiryDate ? new Date(parseInt(s.ExpiryDate.substr(6))).toLocaleDateString('en-GB') : 'N/A'; const r = s.CurrentStock <= s.MinStockLevel ? 'table-danger' : ''; t.append(`<tr class="${r}" data-search="${(s.ItemName + ' ' + s.Company).toLowerCase()}"><td>${s.ItemName}</td><td>${s.Packing}</td><td>${s.Company}</td><td>${s.BatchNo}</td><td>${e}</td><td>${s.CurrentStock}</td></tr>`); }); }); }
            $('#stockSearch').on('keyup', function () { const s = $(this).val().toLowerCase(); $('#stockTable tbody tr').each(function () { $(this).data('search').includes(s) ? $(this).show() : $(this).hide(); }); });
            function loadSalesHistory() { ajaxCall("GetSalesHistory", {}, (res) => { const t = $("#salesHistoryTable tbody").empty(); $.each(res.d, (i, h) => { const d = new Date(parseInt(h.TransactionDate.substr(6))).toLocaleString('en-GB'); const a = `<button class="btn btn-sm btn-primary btn-reprint-sale" data-id="${h.ID}" title="Reprint Bill"><i class="fas fa-print"></i></button> <button class="btn btn-sm btn-danger btn-delete-sale" data-id="${h.ID}" title="Delete Bill"><i class="fas fa-trash"></i></button>`; t.append(`<tr><td>${h.ID}</td><td>${d}</td><td>${h.PartyName}</td><td>${h.InvoiceNum || ''}</td><td>${h.Amount.toFixed(2)}</td><td>${a}</td></tr>`); }); }); }
            function loadPurchaseHistory() { ajaxCall("GetPurchaseHistory", {}, (res) => { const t = $("#purchaseHistoryTable tbody").empty(); $.each(res.d, (i, h) => { const d = new Date(parseInt(h.TransactionDate.substr(6))).toLocaleDateString('en-GB'); const a = `<button class="btn btn-sm btn-info btn-view-purchase" data-id="${h.ID}" title="View Details"><i class="fas fa-eye"></i></button> <button class="btn btn-sm btn-danger btn-delete-purchase" data-id="${h.ID}" title="Delete Purchase"><i class="fas fa-trash"></i></button>`; t.append(`<tr><td>${h.ID}</td><td>${d}</td><td>${h.PartyName}</td><td>${h.InvoiceNum}</td><td>${h.Amount.toFixed(2)}</td><td>${a}</td></tr>`); }); }); }
            $(document).on('click', '.btn-reprint-sale', function () { ajaxCall("GetSaleDetailsForInvoice", { saleId: $(this).data('id') }, (res) => { if (res.d) generatePdfInvoice(res.d); else alert("Could not find details."); }); });
            $(document).on('click', '.btn-delete-sale', function () { const id = $(this).data('id'); if (!confirm(`Delete Sale Bill No. ${id}? This won't restock items.`)) return; ajaxCall("DeleteSale", { saleId: id }, (res) => { alert(res.d.message); if (res.d.success) { loadSalesHistory(); loadDashboardData($('#dashboardDate').val()); } }); });
            $(document).on('click', '.btn-view-purchase', function () { ajaxCall("GetPurchaseDetails", { purchaseId: $(this).data('id') }, (res) => { const d = res.d; if (d) { $('#pdmSupplier').text(d.SupplierName); $('#pdmInvoice').text(d.InvoiceNumber); $('#pdmDate').text(new Date(parseInt(d.InvoiceDate.substr(6))).toLocaleDateString('en-GB')); $('#pdmAmount').text('₹ ' + d.TotalAmount.toFixed(2)); const t = $('#pdmItemsTable').empty(); $.each(d.Items, (i, item) => { const e = item.ExpiryDate ? new Date(parseInt(item.ExpiryDate.substr(6))).toLocaleDateString('en-GB') : 'N/A'; t.append(`<tr><td>${item.ItemName}</td><td>${item.BatchNo}</td><td>${e}</td><td>${item.Quantity}</td><td>${item.Rate.toFixed(2)}</td><td>${(item.Quantity * item.Rate).toFixed(2)}</td></tr>`); }); purchaseDetailModal.show(); } else alert('Could not load details.'); }); });
            $(document).on('click', '.btn-delete-purchase', function () { const id = $(this).data('id'); if (!confirm(`Delete Purchase ID ${id}? This works only if items are not sold.`)) return; ajaxCall("DeletePurchase", { purchaseId: id }, (res) => { alert(res.d.message); if (res.d.success) { loadPurchaseHistory(); loadDashboardData($('#dashboardDate').val()); } }); });
            function loadExpiringItems() { ajaxCall("GetExpiringItems", {}, (res) => { const t = $("#expiringItemsTable tbody").empty(); if (res.d.length === 0) { t.append('<tr><td colspan="5" class="text-center">No items expiring in 60 days.</td></tr>'); } else { $.each(res.d, (i, s) => { const e = new Date(parseInt(s.ExpiryDate.substr(6))).toLocaleDateString('en-GB'); t.append(`<tr><td>${s.ItemName}</td><td>${s.Company}</td><td>${s.BatchNo}</td><td>${e}</td><td>${s.CurrentStock}</td></tr>`); }); } expiringItemsModal.show(); }); }
            $('#view-expense-tab').on('click', function () { $('#btnFilterExpenses').trigger('click'); });
            $('#btnFilterExpenses').click(function () { const f = { startDate: $('#expenseStartDate').val(), endDate: $('#expenseEndDate').val() }; if (!f.startDate || !f.endDate) { alert('Please select dates.'); return; } ajaxCall("GetExpenses", f, (res) => { const t = $('#expenseTable tbody').empty(); if (res.d.length === 0) { t.append('<tr><td colspan="5" class="text-center">No expenses found.</td></tr>'); } else { $.each(res.d, (i, e) => { const d = new Date(parseInt(e.ExpenseDate.substr(6))).toLocaleDateString('en-GB'); t.append(`<tr><td>${d}</td><td>${e.Category}</td><td>${e.Description || ''}</td><td>${e.Amount.toFixed(2)}</td><td><button class="btn btn-sm btn-danger btn-delete-expense" data-id="${e.ExpenseID}"><i class="fas fa-trash"></i></button></td></tr>`); }); } }); });
            $(document).on('click', '.btn-delete-expense', function () { const id = $(this).data('id'); if (!confirm(`Delete this expense?`)) return; ajaxCall("DeleteExpense", { expenseId: id }, (res) => { alert(res.d.message); if (res.d.success) { $('#btnFilterExpenses').trigger('click'); } }); });
            $('#btnSaveExpense').click(function () { const e = { ExpenseDate: $('#expenseDate').val(), Category: $('#expenseCategory').val(), Amount: parseFloat($('#expenseAmount').val()), Description: $('#expenseDescription').val().trim() }; if (!e.ExpenseDate || !e.Category || !e.Amount > 0) { alert('Please fill required fields.'); return; } ajaxCall("SaveExpense", { expense: e }, (res) => { alert(res.d.message); if (res.d.success) { $('#expenseAmount, #expenseDescription').val(''); $('#expenseCategory').val('Rent'); $('#view-expense-tab').tab('show'); $('#btnFilterExpenses').trigger('click'); } }); });
            $('#btnGenerateReport').click(() => { const d = $('#reportDate').val(); if (!d) { alert('Please select date.'); return; } ajaxCall("GetDailyReportData", { reportDate: d }, (res) => { const data = res.d; const dt = new Date(d + 'T00:00:00'); const fd = dt.toLocaleDateString('en-GB', { day: '2-digit', month: 'long', year: 'numeric' }); $('#reportHeader').text(`Report for ${fd}`); $('#reportTotalSales').text('₹ ' + data.TotalSales.toFixed(2)); $('#reportTotalProfit').text('₹ ' + data.TotalProfit.toFixed(2)); const st = $('#reportSalesTable tbody').empty(); if (data.SalesTransactions.length > 0) $.each(data.SalesTransactions, (i, s) => st.append(`<tr><td>${s.ID}</td><td>${new Date(parseInt(s.TransactionDate.substr(6))).toLocaleTimeString('en-US')}</td><td>${s.PartyName}</td><td>${s.Amount.toFixed(2)}</td></tr>`)); else st.append('<tr><td colspan="4" class="text-center">No sales.</td></tr>'); const pt = $('#reportPurchaseTable tbody').empty(); if (data.PurchaseTransactions.length > 0) $.each(data.PurchaseTransactions, (i, p) => pt.append(`<tr><td>${p.ID}</td><td>${p.PartyName}</td><td>${p.InvoiceNum}</td><td>${p.Amount.toFixed(2)}</td></tr>`)); else pt.append('<tr><td colspan="4" class="text-center">No purchases.</td></tr>'); $('#reportDataContainer, #btnPrintReport').show(); }); });
            $('#btnGenerateMonthlyReport').click(function () { const m = $('#reportMonth').val(); if (!m) { alert('Select a month.'); return; } ajaxCall("GetMonthlyReportData", { reportMonth: m }, (res) => { const d = res.d; const [y, mn] = m.split('-'); const dObj = new Date(y, mn - 1, 1); const fm = dObj.toLocaleString('en-US', { month: 'long', year: 'numeric' }); $('#monthlyReportHeader').text(`Report for ${fm}`); $('#mReportTotalSales').text('₹ ' + d.TotalSales.toFixed(2)); $('#mReportTotalPurchase').text('₹ ' + d.TotalPurchases.toFixed(2)); $('#mReportTotalExpenses').text('₹ ' + d.TotalExpenses.toFixed(2)); $('#mReportNetProfit').text('₹ ' + d.NetProfit.toFixed(2)); const vt = $('#mReportTopSalesValue tbody').empty(); if (d.TopSellingItemsByValue.length > 0) $.each(d.TopSellingItemsByValue, (i, item) => vt.append(`<tr><td>${item.Key}</td><td>${item.Value.toFixed(2)}</td></tr>`)); else vt.append('<tr><td colspan="2" class="text-center">No sales.</td></tr>'); const qt = $('#mReportTopSalesQty tbody').empty(); if (d.TopSellingItemsByQuantity.length > 0) $.each(d.TopSellingItemsByQuantity, (i, item) => qt.append(`<tr><td>${item.Key}</td><td>${item.Value}</td></tr>`)); else qt.append('<tr><td colspan="2" class="text-center">No sales.</td></tr>'); const dt = $('#mReportDailySummary tbody').empty(); if (d.DailySummaries.length > 0) $.each(d.DailySummaries, (i, day) => { const date = new Date(parseInt(day.SummaryDate.substr(6))).toLocaleDateString('en-GB'); dt.append(`<tr><td>${date}</td><td>${day.TotalSales.toFixed(2)}</td><td>${day.TotalPurchases.toFixed(2)}</td><td>${day.TotalProfit.toFixed(2)}</td></tr>`); }); else dt.append('<tr><td colspan="4" class="text-center">No transactions.</td></tr>'); $('#monthlyReportDataContainer, #btnPrintMonthlyReport').show(); }); });
            let currentInput = '', operator = null, previousInput = ''; const display = $('#calcDisplay'); $('.calc-btn').click(function () { const v = $(this).text(); if ($(this).hasClass('operator')) { if (currentInput) { if (previousInput) { $('#calcEquals').click(); } operator = v; previousInput = currentInput; currentInput = ''; } } else if (v === 'C') { currentInput = ''; previousInput = ''; operator = null; display.val(''); } else if (v === '=') { if (currentInput && previousInput && operator) { try { const r = eval(previousInput + operator + currentInput); display.val(r); currentInput = r.toString(); previousInput = ''; operator = null; } catch (e) { display.val('Error'); currentInput = ''; previousInput = ''; operator = null; } } } else { currentInput += v; display.val(currentInput); } });

            // --- Initial Page Load Calls ---
            setInitialDates();
            loadShopSettings(); // Load theme and other settings on startup
            loadDashboardData($('#dashboardDate').val());
            loadInitialData();
        });
    </script>
</body>
</html>